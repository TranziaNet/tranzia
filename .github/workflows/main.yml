name: Publish Docker Image and Docs

on:
  release:
    types: [published]

permissions:
  id-token: write
  pages: write
  contents: read

jobs:
  docker-build-publish:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Set version details
        id: vars
        run: |
          echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "commit_hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "build_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Build Docker image with version metadata
        run: |
          docker build \
            --build-arg VERSION=${{ steps.vars.outputs.tag_name }} \
            --build-arg COMMIT=${{ steps.vars.outputs.commit_hash }} \
            --build-arg DATE=${{ steps.vars.outputs.build_date }} \
            -t ghcr.io/tranzianet/tranzia:${{ steps.vars.outputs.tag_name }} \
            -t ghcr.io/tranzianet/tranzia:latest \
            .

      - name: Trivy Scan - Docker Image Vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          image-ref: 'ghcr.io/tranzianet/tranzia:latest'
          format: 'table'
          severity: 'CRITICAL,HIGH'

      - name: Push Docker image
        run: |
          docker push ghcr.io/tranzianet/tranzia:${{ steps.vars.outputs.tag_name }}
          docker push ghcr.io/tranzianet/tranzia:latest

  generate-and-publish-docs:
    name: Generate and Publish Docs to GitHub Pages
    runs-on: ubuntu-latest
    needs: docker-build-publish

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python and install mkdocs
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install MkDocs and theme
        run: |
          pip install mkdocs mkdocs-material

      - name: Generate CLI docs
        run: make docs

      - name: Build MkDocs site
        run: mkdocs build

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'site/'

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
