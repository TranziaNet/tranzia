name: Publish APT Repo on Release

on:
  release:
    types: [published]

jobs:
  publish-apt:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main repo
        uses: actions/checkout@v4

      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg-dev gnupg gh

      - name: Authenticate GitHub CLI
        run: gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: Download .deb from latest release
        run: |
          gh release download "${{ github.event.release.tag_name }}" --pattern "*.deb"

      - name: Clone APT repo
        uses: actions/checkout@v4
        with:
          repository: tranzianet/tranzia-apt-repo
          path: apt-repo
          ref: gh-pages
          token: ${{ secrets.GH_TOKEN }}

      - name: Import GPG private key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
          gpg --list-keys

      - name: Copy .deb and update APT index
        run: |
          mkdir -p apt-repo/pool/main/t/tranzia
          cp *.deb apt-repo/pool/main/t/tranzia/

          mkdir -p apt-repo/dists/stable/main/binary-amd64
          cd apt-repo
          dpkg-scanpackages pool /dev/null > dists/stable/main/binary-amd64/Packages
          gzip -9c dists/stable/main/binary-amd64/Packages > dists/stable/main/binary-amd64/Packages.gz

          apt-ftparchive release dists/stable > dists/stable/Release
          gpg --batch --yes --passphrase "${{ secrets.GPG_PASSPHRASE }}" \
              -abs -o dists/stable/Release.gpg dists/stable/Release

      - name: Commit and push to APT repo
        run: |
          cd apt-repo
          git config user.name "Tranzia Bot"
          git config user.email "bot@tranzia.dev"
          git add .
          git commit -m "Update APT repo from release ${{ github.event.release.tag_name }}" || echo "No changes to commit"
          git push origin gh-pages
